(function(){"use strict";function C(s,t){if(s.empty)throw Error(`source-empty ${s.name}`);if(s.done)throw Error(`source-closed ${s.name}`);if(t.full)throw Error(`target-full ${s.name}`);const e=s.topColor;if(t.length>0&&e!==t.topColor)throw Error("invalid-color");const n=Math.min(s.topAmount,t.emptySpace),o=s.levels.slice(0,-n),l=Array(n).fill(e),r=[...t.levels,...l];return[new h(s.id,o),new h(t.id,r)]}class h{constructor(t,e=[]){this.id=t,this.levels=e}get name(){return String.fromCharCode(65+this.id)}get empty(){return this.levels.length===0}get full(){return this.levels.length>=4}get emptySpace(){return 4-this.levels.length}get done(){return this.levels.length===4&&this.levels[0]===this.levels[1]&&this.levels[1]===this.levels[2]&&this.levels[2]==this.levels[3]}get topColor(){return this.levels.length?this.levels[this.levels.length-1]:null}get topAmount(){if(this.levels.length<=1)return this.levels.length;const t=this.topColor;let e=1;for(;e<this.levels.length;){if(this.levels[this.levels.length-1-e]!=t)return e;e+=1}return this.levels.length}get singleColor(){return this.topAmount===this.levels.length}accepts(t){return this.empty?4:this.full?0:this.topColor===t?this.emptySpace:0}add(t){if(!this.full)return new h(this.id,[...this.levels,t])}}function b(){}function M(s,t){return s!=s?t==t:s!==t||s&&typeof s=="object"||typeof s=="function"}Promise.resolve();const a=[];function S(s,t=b){let e;const n=new Set;function o(u){if(M(s,u)&&(s=u,e)){const c=!a.length;for(const i of n)i[1](),a.push(i,s);if(c){for(let i=0;i<a.length;i+=2)a[i][0](a[i+1]);a.length=0}}}function l(u){o(u(s))}function r(u,c=b){const i=[u,c];return n.add(i),n.size===1&&(e=t(o)||b),u(s),()=>{n.delete(i),n.size===0&&(e(),e=null)}}return{set:o,update:l,subscribe:r}}const $=19;class y{constructor(t,e){this.items=t,this.cumulative=[],this.tot=0;for(let n=0;n<t.length;n++)this.tot+=e[n],this.cumulative.push(this.tot)}randomItem(){const t=Math.random()*this.tot;for(let e=0;e<this.items.length;e++)if(this.cumulative[e]>t)return this.items[e];return this.items[this.items.length-1]}}function E(s){let t=[];for(let e=0;e<s.length;e++){const n=s[e];if(!n.done&&!n.empty)for(let o=0;o<s.length;o++){const l=s[o];e!==o&&l.accepts(n.topColor)&&t.push({from:n.id,to:l.id})}}return t}function x(s){return s.map(t=>t.done||t.empty).reduce((t,e)=>t&&e,!0)}class d{constructor(t=[]){this.tubes=[];for(const[e,n]of t.entries())n instanceof h?this.tubes.push(n):this.tubes.push(new h(e,n));x(this.tubes)?this.status="win":this.possibleActions().length===0&&(this.status="lose")}possibleActions(){return E(this.tubes)}get won(){return this.status==="win"}get lost(){return this.status==="lose"}get ended(){return this.status!==void 0}get numClosed(){return this.tubes.filter(t=>t.done).length}historyEntry({from:t,to:e}){if(this.tubes[t].topColor!==this.tubes[e].topColor&&!this.tubes[e].empty)throw new Error("invalid-color");const n=this.tubes[t].topColor;return{fromIndex:t,toIndex:e,fromId:this.tubes[t].name,toId:this.tubes[e].name,color:n,amount:Math.min(this.tubes[t].topAmount,this.tubes[e].accepts(n))}}applyMove({from:t,to:e}){const[n,o]=C(this.tubes[t],this.tubes[e]),l=[...this.tubes];return l[t]=n,l[e]=o,new d(l)}add(t,e){const n=[...this.tubes];return n[e]=this.tubes[e].add(t),new d(n)}getHash(){return this.tubes.map(t=>t.levels.concat(t.full?[]:[0])).flat().map(t=>t.toString(36)).join("")}}function v(s){return s[Math.floor(Math.random()*s.length)]}function I(s){for(let t=s.length-1;t>0;t--){const e=Math.floor(Math.random()*(t+1));[s[t],s[e]]=[s[e],s[t]]}}function R(s){const t=Array($).fill().map((e,n)=>n+1);return I(t),t.slice(0,s)}function k(s){s=s||10+Math.floor(Math.random()*6);const t=R(s-2),e=new Array(s-2).fill().map((l,r)=>new Array(4).fill(t[r])).concat([[],[]]),n=new d(e);for(let l=0;l<70;l++){console.debug(JSON.stringify(n.tubes));const r=new y(n.tubes,n.tubes.map(p=>p.topAmount)).randomItem(),u=n.tubes.filter(p=>!p.full&&p.id!==r.id),c=v(u),i=Math.min(r.singleColor?r.topAmount-1:r.topAmount,c.emptySpace),f=new y([1,2,3].splice(0,i),[1,3,9].splice(i)).randomItem();console.debug(`move ${l}: ${r.id} -> ${c.id}, ${f} blocks`);const m=r.levels.splice(-f);c.levels.push(...m)}let o=n.tubes.filter(l=>l.empty).length;for(let l=0;l<100&&o<2;l++){const r=n.tubes.filter(i=>!i.empty),u=v(r),c=n.tubes.filter(i=>!i.full&&i.levels.length>u.levels.length);if(c.length>0){const i=v(c);console.debug(`move: ${u.id} -> ${i.id}`);const f=u.levels.splice(-1);i.levels.push(...f)}o=n.tubes.filter(i=>i.empty).length}return new d(n.tubes)}S(k());const T=2;function q(s,t){const e=s.tubes[t.from],n=s.tubes[t.to];return!!(e.singleColor&&n.empty)}class w{constructor(t,e,n){this.state=t,this.action=n,this.unevaluatedActions=t.possibleActions().filter(o=>!q(t,o)),this.parent=e,this.children=[],this.visits=0,this.reward=0}get isTerminalNode(){return this.state.ended||this.unevaluatedActions.length===0&&this.children.length===0}get fullyExpanded(){return this.unevaluatedActions.length===0}bestChild(){let t=-1/0,e=null;for(const n of this.children){const o=n.getUpperConfidenceBound();o>t&&(e=n,t=o)}return e||console.error("invalid child"),e}getUpperConfidenceBound(){return this.visits===0?1/0:this.reward/this.visits+T*Math.sqrt(Math.log(this.parent.visits)/this.visits)}expand(){const t=this.unevaluatedActions.pop(),e=this.state.historyEntry(t),n=this.state.applyMove(t),o=new w(n,this,e);return this.children.push(o),o}backpropagate(t){this.visits++,this.reward+=t,this.parent&&this.parent.backpropagate(t)}}function N(s){const t=new w(s,null),e=50;let n,o=-1/0,l=[];const r=new Date().valueOf();let u=0,c=0;for(;c<1e3||n!=="win"&&c<3e3;){const[i,f]=O(t),[m,p]=z(i.state,e),A=f.concat(p),g=_(m,A);console.debug(`run result ${g}`),i.backpropagate(g),g>o&&(l=A,o=g,n=m.status),u++,c=new Date().valueOf()-r}return console.info(`best result: ${n} with value ${o.toFixed(2)} after ${u} iterations (${c}ms)`),{result:n,actions:l}}function O(s){let t=s;const e=[];for(;!t.isTerminalNode;)if(t.fullyExpanded)t=t.bestChild(),e.push(t.action);else{t=t.expand(),e.push(t.action);break}return[t,e]}function j(s){return s[Math.floor(Math.random()*s.length)]}function z(s,t=20){const e=[];let n=s;for(let o=0;!n.ended&&o<t;o++){const l=n.possibleActions(),r=j(l);e.push(n.historyEntry(r)),n=n.applyMove(r)}return[n,e]}function _(s,t){return s.won?50/t.length:s.lost?0:1*s.numClosed/s.tubes.length}onmessage=s=>{console.log("received message");const t=s.data.tubes.map(o=>new h(o.id,o.levels)),e=new d(t),n=N(e);postMessage(n)}})();
